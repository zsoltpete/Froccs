//
//  FroccsListViewController.swift
//  Froccs
//
//  Created by Zsolt Pete on 2020. 05. 03..
//  Copyright (c) 2020. levivig. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import SnapKit
import SwifterSwift
import UIKit

final class FroccsListViewController: BaseViewController {

    // MARK: - Public properties -

    var presenter: FroccsListPresenterInterface!
    
    // MARK: - Private properties -
    
    private var tableView: UITableView!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
        
        presenter.viewDidLoad()
    }
    
    private func setup() {
        initTableView()
    }
    
    private func initTableView() {
        tableView = UITableView(frame: .zero, style: .grouped)
        
        tableView.register(cellWithClass: FroccsItemCell.self)
//        tableView.separatorStyle  = .none
        tableView.backgroundColor = .white
        
        tableView.dataSource = self
        tableView.delegate = self
        
        view.addSubview(tableView)
        tableView.snp.makeConstraints { make in
            make.edges.equalTo(view.safeAreaLayoutGuide)
        }
    }

}

// MARK: - Extensions -

extension FroccsListViewController: FroccsListViewInterface {
    func reloadList() {
        tableView.reloadData()
    }
    
}

extension FroccsListViewController:  UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        presenter.numberOfItem(in: section)
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withClass: FroccsItemCell.self)
        let model = presenter.itemForRow(at: indexPath)
        cell.bind(model)
        return cell
    }
    
}

extension FroccsListViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        presenter.selectItem(at: indexPath)
    }
    
}
