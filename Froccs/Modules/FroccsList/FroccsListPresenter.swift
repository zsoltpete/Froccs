//
//  FroccsListPresenter.swift
//  Froccs
//
//  Created by Zsolt Pete on 2020. 05. 03..
//  Copyright (c) 2020. levivig. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class FroccsListPresenter {

    // MARK: - Private properties -

    private unowned let view: FroccsListViewInterface
    private let interactor: FroccsListInteractorInterface
    private let wireframe: FroccsListWireframeInterface
    
    private var items: [FroccsItemCellBindable] = [] {
        didSet  {
            view.reloadList()
        }
    }

    // MARK: - Lifecycle -

    init(view: FroccsListViewInterface, interactor: FroccsListInteractorInterface, wireframe: FroccsListWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
    
    func viewDidLoad() {
        interactor.getFroccss { result in
            switch result {
            case .success(let items):
                self.items = items
            case .failure(let error):
                log.error(error.localizedDescription)
            }
        }
    }
    
    func viewWillAppear(animated: Bool) {
        view.setTitle("Fröccsök")
    }
}

// MARK: - Extensions -

extension FroccsListPresenter: FroccsListPresenterInterface {
    func numberOfItem(in section: Int) -> Int {
        items.count
    }
    
    func itemForRow(at indexPath: IndexPath) -> CellBindable {
        items[indexPath.row]
    }
    
    func selectItem(at indexPath: IndexPath) {
        if let froccs = items[indexPath.row] as? Froccs {
            wireframe.openDetail(Froccs(froccs: froccs))
        }
        
    }
    
}
